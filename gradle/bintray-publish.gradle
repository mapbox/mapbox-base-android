apply plugin: 'digital.wup.android-maven-publish'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.jfrog.artifactory'
apply from: file('../gradle/artifact-settings.gradle')

version = project.ext.versionName
group = project.ext.mapboxArtifactGroupId

publishing {
    publications {
        MapboxBasePublication(MavenPublication) {
            if (project.ext.isAndroidProject.toBoolean()) {
                from components.android

                afterEvaluate {
                    artifact(androidSourcesJar)
                    artifact(androidJavadocsJar)
                }
            } else {
                from components.java

                afterEvaluate {
                    artifact(sourcesJar)
                    artifact(javadocJar)
                }
            }
            groupId this.group
            artifactId project.ext.mapboxArtifactId
            version this.version

            pom.withXml {
                final mainNode = asNode()
                mainNode.appendNode('name', project.ext.mapboxArtifactTitle)
                mainNode.appendNode('description', project.ext.mapboxArtifactDescription)
                mainNode.appendNode('url', project.ext.mapboxArtifactUrl)

                final licenseNode = mainNode.appendNode('licenses').appendNode('license')
                licenseNode.appendNode('name', project.ext.mapboxArtifactLicenseName)
                licenseNode.appendNode('url', project.ext.mapboxArtifactLicenseUrl)
                licenseNode.appendNode('distribution', "repo")

                final developerNode = mainNode.appendNode('developers').appendNode('developer')
                developerNode.appendNode('id', project.ext.mapboxDeveloperId)
                developerNode.appendNode('name', project.ext.mapboxDeveloperName)

                final scmNode = mainNode.appendNode("scm")
                scmNode.appendNode("connection", project.ext.mapboxArtifactScmUrl)
                scmNode.appendNode("developerConnection", project.ext.mapboxArtifactScmUrl)
                scmNode.appendNode("url", project.ext.mapboxArtifactUrl)
            }
        }
    }
}

bintray {
    user = mapboxBintrayUser
    key = mapboxBintrayApiKey
    publications('MapboxBasePublication')
    pkg {
        repo = project.ext.mapboxBintrayRepoName
        name = project.ext.mapboxArtifactId
        userOrg = project.ext.mapboxBintrayUserOrg
        licenses = [project.ext.mapboxArtifactLicenseName]
        vcsUrl = project.ext.mapboxArtifactVcsUrl
        publish = false
        version {
            name = project.ext.versionName
            desc = project.ext.mapboxArtifactDescription
            released = new Date()
            gpg {
                sign = true
                passphrase = mapboxGpgPassphrase
            }
            mavenCentralSync {
                sync = false
            }
        }
    }
}

tasks.withType(Javadoc) {
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('docencoding', 'UTF-8')
    options.addStringOption('charset', 'UTF-8')
}