apply plugin: 'maven-publish'
apply plugin: 'com.mapbox.sdkRegistry'
apply from: file('../gradle/artifact-settings.gradle')

version = project.ext.versionName
group = project.ext.mapboxArtifactGroupId

publishing {
    publications {
        MapboxBasePublication(MavenPublication) {
            afterEvaluate {
                if (project.ext.isAndroidProject.toBoolean()) {
                    from components.release
                    artifact(androidSourcesJar)
                } else {
                    from components.java
                    artifact(sourcesJar)
                }
                artifact(javadocsJar)
            }

            groupId this.group
            artifactId project.ext.mapboxArtifactId
            version this.version

            pom.withXml {
                final mainNode = asNode()
                mainNode.appendNode('name', project.ext.mapboxArtifactTitle)
                mainNode.appendNode('description', project.ext.mapboxArtifactDescription)
                mainNode.appendNode('url', project.ext.mapboxArtifactUrl)

                final licenseNode = mainNode.appendNode('licenses').appendNode('license')
                licenseNode.appendNode('name', project.ext.mapboxArtifactLicenseName)
                licenseNode.appendNode('url', project.ext.mapboxArtifactLicenseUrl)
                licenseNode.appendNode('distribution', "repo")

                final developerNode = mainNode.appendNode('developers').appendNode('developer')
                developerNode.appendNode('id', project.ext.mapboxDeveloperId)
                developerNode.appendNode('name', project.ext.mapboxDeveloperName)

                final scmNode = mainNode.appendNode("scm")
                scmNode.appendNode("connection", project.ext.mapboxArtifactScmUrl)
                scmNode.appendNode("developerConnection", project.ext.mapboxArtifactScmUrl)
                scmNode.appendNode("url", project.ext.mapboxArtifactUrl)
            }
        }
    }
}

registry {
    sdkName = project.properties['registrySdkName']
    production = true
    snapshot = versionName.endsWith("-SNAPSHOT")
    override = snapshot ? true : false
    dryRun = project.properties['sdkRegistryDryRun'] ?: false
    publications = ["MapboxBasePublication"]
}

task javadocsJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from dokka.outputDirectory
}

tasks.withType(Javadoc) {
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('docencoding', 'UTF-8')
    options.addStringOption('charset', 'UTF-8')
}
