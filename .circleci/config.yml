version: 2.1

executors:
  ndk-r21e-latest-executor:
    docker:
      - image: mbgl/android-ndk-r21e:latest
    working_directory: ~/code
    environment:
      MBX_CI_DOMAIN: o619qyc20d.execute-api.us-east-1.amazonaws.com

commands:
  restore-gradle-cache:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle.kts" }}-{{ checksum "annotations/build.gradle.kts" }}-{{ checksum "annotations-processor/build.gradle.kts" }}-{{ checksum "common/build.gradle.kts" }}-{{ checksum "liblogger/build.gradle.kts" }}
            - v1-dependencies-
      - run:
          name: Download dependencies
          command: ./gradlew dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle.kts" }}-{{ checksum "annotations/build.gradle.kts" }}-{{ checksum "annotations-processor/build.gradle.kts" }}-{{ checksum "common/build.gradle.kts" }}-{{ checksum "liblogger/build.gradle.kts" }}

  install-mbx-ci:
    steps:
      - run:
          name: Install mbx-ci
          command: |
            curl -Ls https://mapbox-release-engineering.s3.amazonaws.com/mbx-ci/latest/mbx-ci-linux-amd64 > mbx-ci
            chmod 755 ./mbx-ci
            ./mbx-ci aws setup

  run-unit-tests:
    steps:
      - run:
          name: Run unit tests
          command: make runUnitTests

  validate-license:
    steps:
      - run:
          name: Validate LICENSE.md
          command: python scripts/license-validate.py

  static-code-analysis:
    steps:
      - run:
          name: Run ktlint
          command: ./gradlew ktlint

  validate-dokka-docs:
    steps:
      - run:
          name: Validate dokka docs
          command: sh scripts/kdoc-validate.sh

  build-release-libraries:
    steps:
      - run:
          name: Build libraries for release
          command: make buildRelease

  build-debug-libraries:
    steps:
      - run:
          name: Build libraries for debug
          command: make buildDebug

  publish:
    steps:
      - deploy:
          name: Publish Base SDK artifacts to SDK Registry
          command: |
            version=$(cat gradle.properties | grep "VERSION_NAME")
            if [[ $CIRCLE_BRANCH == master && $version == *"SNAPSHOT"* ]]; then
              make sdkRegistryPublish
            elif [[ $CIRCLE_TAG == v* ]]; then
              sed -i -e "s/^VERSION_NAME=.*/VERSION_NAME=${CIRCLE_TAG:1}/" gradle.properties
              make sdkRegistryPublish
            fi

jobs:
  verify-code:
    executor: ndk-r21e-latest-executor
    steps:
      - checkout
      - restore-gradle-cache
      - run-unit-tests
      - validate-license
      - static-code-analysis
      - validate-dokka-docs

  build-release:
    executor: ndk-r21e-latest-executor
    steps:
      - checkout
      - restore-gradle-cache
      - build-release-libraries

  build-debug:
    executor: ndk-r21e-latest-executor
    steps:
      - checkout
      - restore-gradle-cache
      - build-debug-libraries

  release:
    executor: ndk-r21e-latest-executor
    steps:
      - checkout
      - restore-gradle-cache
      - install-mbx-ci
      - build-release-libraries
      - publish

workflows:
  version: 2
  build:
    jobs:
      - verify-code:
          filters:
            tags:
              only: /v.*/
      - build-debug:
          requires:
            - verify-code
      - release:
          requires:
            - verify-code
          filters:
            tags:
              only: /v.*/
