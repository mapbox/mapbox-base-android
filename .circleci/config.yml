version: 2.1
commands:
  restore-gradle-cache:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle.kts" }}-{{ checksum "annotations/build.gradle.kts" }}-{{ checksum "annotations-processor/build.gradle.kts" }}-{{ checksum "common/build.gradle.kts" }}
            - v1-dependencies-
      - run:
          name: Download dependencies
          command: ./gradlew dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle.kts" }}-{{ checksum "annotations/build.gradle.kts" }}-{{ checksum "annotations-processor/build.gradle.kts" }}-{{ checksum "common/build.gradle.kts" }}

  run-unit-tests:
    steps:
      - run:
          name: Run unit tests
          command: make runUnitTests

  validate-license:
    steps:
      - run:
          name: Validate LICENSE.md
          command: python scripts/license-validate.py

  static-code-analysis:
    steps:
      - run:
          name: Run ktlint
          command: ./gradlew ktlint

  validate-dokka-docs:
    steps:
      - run:
          name: Validate dokka docs
          command: sh scripts/kdoc-validate.sh

  build-release-libraries:
    steps:
      - run:
          name: Build libraries for release
          command: make buildRelease

  build-debug-libraries:
    steps:
      - run:
          name: Build libraries for debug
          command: make buildDebug

  update-version-name:
    steps:
      - run:
          name: Update version name
          command: |
            if [[ $CIRCLE_TAG == v* ]]; then
              sed -i -e "s/^VERSION_NAME=.*/VERSION_NAME=${CIRCLE_TAG:1}/" gradle.properties
            fi

  publish:
    steps:
      - run:
          name: Generate Bintray credentials
          command: |
            if [ -n "${BINTRAY_USER}" ]; then
              echo "BINTRAY_USER=$BINTRAY_USER
              BINTRAY_API_KEY=$BINTRAY_API_KEY
              GPG_PASSPHRASE=$GPG_PASSPHRASE"
            fi
      - deploy:
          name: Publish Base SDK artifacts to Bintray
          command: |
            if [[ $CIRCLE_BRANCH == master ]] || [[ $CIRCLE_TAG == v* ]]; then
              version=$(cat gradle.properties | grep "VERSION_NAME")
              if [[ $version != *"SNAPSHOT"* ]]; then
                make bintrayPublish
              else
                make artifactoryPublish
              fi
            fi

jobs:
  verify-code:
    docker:
      - image: mbgl/android-ndk-r20:7b7c4b42cf
    steps:
      - checkout
      - restore-gradle-cache
      - run-unit-tests
      - validate-license
      - static-code-analysis
      - validate-dokka-docs

  build-release:
    docker:
      - image: mbgl/android-ndk-r20:7b7c4b42cf
    steps:
      - checkout
      - restore-gradle-cache
      - build-release-libraries

  build-debug:
    docker:
      - image: mbgl/android-ndk-r20:7b7c4b42cf
    steps:
      - checkout
      - restore-gradle-cache
      - build-debug-libraries

  release:
    docker:
      - image: mbgl/android-ndk-r20:7b7c4b42cf
    steps:
      - checkout
      - restore-gradle-cache
      - update-version-name
      - build-release-libraries
      - publish

workflows:
  version: 2
  build:
    jobs:
      - verify-code:
          filters:
            tags:
              only: /v.*/
      - build-debug:
          requires:
            - verify-code
      - release:
          requires:
            - verify-code
          filters:
            tags:
              only: /v.*/